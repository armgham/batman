#!/bin/bash

CORE_FIRST=$(cat /proc/cpuinfo | awk '/^processor/{print $3}' | sed -n 1p)
CORE_LAST=$(cat /proc/cpuinfo | awk '/^processor/{print $3}' | tail -1)
CORE_HALF=$(expr $(cat /proc/cpuinfo | awk '/^processor/{print $3}' | wc -l) / 2 - 1)

function powersave() {
    for ((i=$CORE_FIRST;i<=$CORE_LAST; i++))
    do
        echo "powersave" > /sys/devices/system/cpu/cpu$i/cpufreq/scaling_governor
    done
}

function schedutil() {
    for ((i=$CORE_FIRST;i<=$CORE_LAST; i++))
    do
         echo "schedutil" > /sys/devices/system/cpu/cpu$i/cpufreq/scaling_governor
    done
}

echo "" > /tmp/batman_stat

while [[ true ]]
do
    SCREEN_OLD=$(cat /tmp/batman_stat)
    SCREEN=$(cat /sys/devices/platform/soc/ae00000.qcom,mdss_mdp/backlight/panel0-backlight/brightness)
    CHARGE=$(upower -d | grep state | awk '!seen[$0]++' |cut -c 26-)
    TIME=$(expr $(expr $(date +%s) - $(stat /tmp/batman_stat -c %Y)) / 60)

    if [ "$SCREEN_OLD" != "SCREEN" ] && [ "$CHARGE" == "discharging" ] && [ "$SCREEN" == "0" ]; then
       powersave
    elif [ "$SCREEN_OLD" != "SCREEN" ] && [ "$CHARGE" == "charging" ] || [ "$CHARGE" == "fully-charged" ]; then
       schedutil
    else
       schedutil
    fi

    if [ "$SCREEN_OLD" != "$SCREEN" ]; then
       echo $SCREEN > /tmp/batman_stat
    fi

    sleep 1
done
